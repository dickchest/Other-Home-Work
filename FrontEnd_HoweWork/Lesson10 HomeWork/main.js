"use strict";
const print = console.log;

// First level: 1. Написать результат выполнения выражения и пояснить в комментариях к коду, почему результат именно такой:
console.log('"Winter" || "Summer" && "Spring" || "Autumn"');
console.log("Winter" || "Summer" && "Spring" || "Autumn");
console.log("winter = первое истинное значение дли ИЛИ");
console.log("-----------------");

console.log(('"Winter" || "Summer") && ("Spring" || "Autumn"'));
console.log(("Winter" || "Summer") && ("Spring" || "Autumn"));
console.log("Spring - для AND - последннее true и для OR - первое true");
console.log("-----------------");

console.log('!"" && !505 && !!0 && !"Hello!"');
console.log(!"" && !505 && !!0 && !"Hello!");
console.log("false - это первое ложное значение (!505)");
console.log("-----------------");

console.log('!!(!"" && !505 && !!0 && !"Hello!")');
console.log(!!(!"" && !505 && !!0 && !"Hello!"));
console.log("false - внутри скобок (false) и 2 раза NOT (-> true -> false) - двойная инверсия");
console.log("-----------------");

console.log('"Как дела?" && (!505 && !!0) || "Hello!"');
console.log("Как дела?" && (!505 && !!0) || "Hello!");
console.log("Hello! - в скобках AND - false, AND - false, OR - первое истинное значение (Hello!)");
console.log("-----------------");

console.log('(false || "Новая строка" && "" || 2023) && !(0 && 10 && "Еще одна строка")');
console.log((false || "Новая строка" && "" || 2023) && !(0 && 10 && "Еще одна строка"));
console.log("(false OR '') AND !(0 && 10 && string) --> (false) && !(0) --> false && false --> false");
console.log("-----------------");

console.log('false || "Новая строка" && "" || 2023 && !0 && 10 && "Еще одна строка"');
console.log(false || "Новая строка" && "" || 2023 && !0 && 10 && "Еще одна строка");
console.log("false OR '' or Еще одна строка (последнее истииное значение в AND) --> Еще одна строка, т.к. это первое истинное значение в операторе OR ");
console.log("-----------------");


// Написать процесс подсчета годовой премии:
// 2.1. функцию, которая принимает в себя массив зарплат сотрудника за год и возвращает среднее значение. Использовать для этого стрелочную функцию. Внутри функции должна быть базовая проверка, что мы передаем массив с числами, а не со строками или другими значениями, которые к числу никак не преобразовать.
let average = array => {
    let sum = 0;
    let resultAverage = 0;

    for(let i=0; i<array.length; i++) {
        if(isNaN(array[i])) {
            return "Массив должен состоять только из числовых значений!";
        }
        sum += array[i];
        resultAverage = sum / array.length;
    }
    return `Средняя зарплата = ${resultAverage}; бонус для работников = ${bonusAmount(resultAverage)}`;
}

// 2.2. функцию, созданную с помощью function declaration, которая принимает в себя полученное значение и подсчитывает премию для сотрудника, а затем возвращает это значение. Расчет может проводится по Вашему усмотрению, но обязательно, чтобы в функции были условия (если средняя зарплата меньше/больше какой-то цифры, алгоритм расчетом отличается - например, коэффициентом)
function bonusAmount(averageValue) {
    let bonus = 0;
    if (averageValue>=400) bonus = 200;
    else if (averageValue > 200) bonus = 100;
    else bonus = 50;
    return bonus;
}
// 2.3. Вывести результат в консоль

let salary_employer1 = [100,200,300,400,500,600,700,800,0];
let salary_employer2 = [100,200,300,400,500,600,700,800,0, "dksfj"];

console.log(average(salary_employer1));
console.log(average(salary_employer2));

// Найти элемент с идентификатором main на html-странице и добавить в его начало заголовок третьего уровня. 

let searchElement = document.body.querySelector('main');
searchElement.innerHTML = "<h3>заголовок третьего уровня</h3>" + searchElement.innerHTML;

// Написать скрипт, который находит все ссылки на странице и формирует массив со всеми адресами. В итоге этот массив необходимо вывести в консоль.

let listOfSocialNetworks = [];
const allLinks=document.querySelectorAll('a');
console.log('Все ссылки на страинце, которые я нашел:')
for(let i=0; i<allLinks.length; i++) {
    if(allLinks[i].hasAttribute('href')) {
        listOfSocialNetworks[i] = allLinks[i].getAttribute('href');
        console.log(listOfSocialNetworks[i]);
    }
}

console.log("Переходите на сайт книжного магазина!!!");

// Написать процесс для вывода информации на html-страницу.
// У нас есть книжный магазин. 
// В структуре проекта есть 2 html-страницы: index.html и books.html.
// На страницах в “шапке” есть навигационное меню, при помощи которого можно переходить между страничками.
// Страница books представляет собой фиксированный набор 10 карточек. Каждая карточка включает в себя:


// Заголовок 2 порядка

// Заголовок 3 порядка

// Параграф

// Изображение

// Спан

// Ссылку


// К страницам подключены базовые стили: есть файл reset.css, есть стили, позволяющие “разложить” карточки на странице с книгами в строку, границы у карточек и любая базовая стилизация на Ваш вкус. Если количество карточек не умещается в отведенную ширину родителя, они должны переносится на следующую строку.  


// В скрипте обязательно должно быть:


// Каждая модель книги представляет из себя набор данных:

// id

// Заголовок

// Автор

// Короткое описание

// Фотография

// Стоимость

// Есть ли на книгу скидка сейчас?

// Метод для формирования ссылки на книгу (ниже приведен пример шаблона ссылки)

// Метод для расчета итоговой стоимости со скидкой (размер скидки может отличаться у разных книг)


// Все книги хранятся в массиве из 10 объектов, соответствующих модели выше.
// Необходимо получить все карточки с созданной страницы books.html
// Для каждой карточки нужно вывести из массива наших книг все данные на страницу:



// заголовок

// автор

// описание

// фотография

// ссылка (формируется по следующему шаблону: books/item-${id}). Пока что сама ссылка никуда не будет вести, но этого достаточно для практики

// стоимость: если книга находится на скидках, вывести нужно стоимость со скидкой. Иначе - обычную